#include<bits/stdc++.h>
using namespace std;

string findLcs(string s1,string s2,int size1,int size2)
{
    int lcsTable[size1+1][size2+1];
    for(int i=0; i<(size1+1); i++)
    {
        for(int j=0; j<(size2+1); j++)
        {
            lcsTable[i][j]=0;
        }
    }

    for(int i=0; i<(size1+1); i++)
    {
        for(int j=0; j<(size2+1); j++)
        {
            if(s1[i-1]==s2[j-1])
            {
                lcsTable[i][j]=lcsTable[i-1][j-1]+1;
            }
            else
            {
                lcsTable[i][j]=max(lcsTable[i-1][j],lcsTable[i][j-1]);
            }
        }
    }

    int i=size1+1;
    int j=size2+1;
    string lcs;

    while(i>0 && j>0)
    {
        if(s1[i-1]==s2[j-1])
        {
            lcs=s1[i-1]+lcs;
            i--;
            j--;
        }
        else if(lcsTable[i-1][j]>lcsTable[i][j-1])
        {
            i--;
        }
        else
        {
            j--;
        }
    }

    return lcs;

}

int main()
{
    string s1,s2;
    cout<<"Enter the 1st string :"<<endl;
    getline(cin,s1);
    cout<<"Enter the 2nd string :"<<endl;
    getline(cin,s2);

    int size1=s1.length();
    int size2=s2.length();

    string lcs=findLcs(s1,s2,size1,size2);

    cout<<"Longest common subsequence : "<<lcs<<endl;
    return 0;
}
