#include <bits/stdc++.h>
using namespace std;

void heapify(int arr[], int n, int i) {
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;

    if (left < n && arr[left] > arr[largest])
        largest = left;

    if (right < n && arr[right] > arr[largest])
        largest = right;

    if (largest != i) {
        swap(arr[i], arr[largest]);
        heapify(arr, n, largest);
    }
}

void heapSort_ascending(int arr[], int n) {
    // Build a max heap
    for (int i = n / 2 - 1; i >= 0; i--) {
        heapify(arr, n, i);
    }

    // Extract elements from the heap one by one
    for (int i = n - 1; i >= 0; i--) {
        swap(arr[0], arr[i]);
        heapify(arr, i, 0);
    }
}

int main() {

    int n;
    cout<<"Enter the number of nodes :"<<endl;
    cin>>n;
    int arr[n];
    cout<<"Enter the nodes :"<<endl;
    for (int i = 0; i < n; i++) {
        cin>>arr[i];
    }

    cout<<"In which order you want the sorting?"<<endl;
    cout<<"1. Ascending Order"<<endl;
    cout<<"2. Descending Order"<<endl;
    cout<<"3. Both"<<endl;

    int check;
    cin>>check;
    if(check==1)
    {
        heapSort_ascending(arr,n);
        for (int i = 0; i < n; i++) {
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }
    else if(check==2)
    {
        heapSort_ascending(arr, n);
        for (int i = n-1; i >=0; i--) {
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }
    else
    {
        cout<<"In Ascending : ";
        heapSort_ascending(arr,n);
        for (int i = 0; i < n; i++) {
            cout<<arr[i]<<" ";
        }
        cout<<endl;
        cout<<"In Descending : ";
        for (int i = n-1; i >=0; i--) {
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }
    return 0;
}
